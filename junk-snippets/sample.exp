#!/usr/bin/ruby

require 'distem'
require 'pp'

IMAGE='file:///home/lsarzyniec/rootfs.tar.bz2'

networks = ['network1', 'network2']

i = 1
nodes = []
asyncnodes = []

Distem.client do |cl|
  pp cl.vnetwork_create(networks[0],'10.144.2.0/24')
  pp cl.vnetwork_create(networks[1],'10.144.3.0/24')
  
  node = 'node1'
  pp cl.vnode_create(node, { 'image' => IMAGE })
  pp cl.viface_create(node, 'if0')
  pp cl.viface_attach(node, 'if0', {
  	'vnetwork' => networks[0],
  	'vtraffic' => { 
  		'OUTPUT' => { 
  			'bandwidth' => {'rate' => '20mbps'},
  			'latency' => {'delay' => '5ms'}
  		},
  		'INPUT' => { 
  			'bandwidth' => {'rate' => '100mbps'},
  			'latency' => {'delay' => '2ms'}
  		}
  	}
  })
  pp cl.vcpu_create(node,3,1000)
  nodes << node
  
  node = 'node2'
  pp cl.vnode_create!(node, { 'image' => IMAGE })
  pp cl.viface_create(node, 'if0')
  pp cl.viface_attach(node, 'if0', {
    'address' => '10.144.3.7',
    'vtraffic' => { 
      'FULLDUPLEX' => { 
        'bandwidth' => {'rate' => '2mbps'},
        'latency' => {'delay' => '50ms'}
      }
    }
  })
  asyncnodes << node
  nodes << node
  
  node = 'node3'
  pp cl.vnode_create!(node, { 'image' => IMAGE })
  pp cl.viface_create(node, 'if0')
  pp cl.viface_attach(node, 'if0', { 'vnetwork' => networks[0] })
  asyncnodes << node
  nodes << node
  
  node = 'node4'
  pp cl.vnode_create!(node, { 'image' => IMAGE })
  pp cl.viface_create(node, 'if0')
  pp cl.viface_attach(node, 'if0', { 'vnetwork' => networks[1] })
  asyncnodes << node
  nodes << node
  
  node = 'nodegw'
  pp cl.vnode_create!(node, { 'image' => IMAGE })
  pp cl.viface_create(node, 'if0')
  pp cl.viface_attach(node, 'if0', { 'vnetwork' => networks[0] })
  pp cl.viface_create(node, 'if1')
  pp cl.viface_attach(node, 'if1', { 'vnetwork' => networks[1] })
  asyncnodes << node
  nodes << node
  
  pp cl.vroute_complete()
  
  puts 'Waiting for the VNodes to be installed ...'
  asyncnodes.each do |node|
    begin
      ret = cl.vnode_info(node)
      sleep(0.2)
    end until ret['status'] == Distem::Resource::Status::READY
    puts "\t#{node} OK"
  end
  puts 'done'

  nodes.shuffle!
  nodesync = nodes[0]
  nodes -= [nodesync]
  puts nodesync
  puts nodes


  puts 'Starting the VNodes ...'
  pp cl.vnode_start(nodesync)
  nodes.each do |node|
    pp cl.vnode_start!(node)
  end
  nodes.each do |node|
    begin
      ret = cl.vnode_info(node)
      sleep(0.2)
    end until ret['status'] == Distem::Resource::Status::RUNNING
    puts "\t#{node} OK"
  end
  puts 'done'
end
